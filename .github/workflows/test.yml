name: test
on: [push]
jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: install valgrind
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install valgrind

      - name: run cmake
        if: matrix.os == 'windows-latest'
        run: cmake -B build -G "MinGW Makefiles"

      - name: run cmake
        if: matrix.os != 'windows-latest'
        run: cmake -B build

      - name: build and run tests
        run: |
          cd build
          cmake --build .
          ctest --output-on-failure
          cmake --build . -t release_bin

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: build/release_bin
          include-hidden-files: true  # for .lcirc


      ######### WASM ##########

      - uses: mymindstorm/setup-emsdk@v14
        if: matrix.os == 'ubuntu-latest'

      - name: build wasm
        if: matrix.os == 'ubuntu-latest'
        # Note: we need to have build lci with a normal compiler first!
        run: |
          cd build
          rm CMakeCache.txt
          cmake -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake  ..
          cmake --build .

      - name: Upload wasm
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-wasm
          path: build/html/dist
